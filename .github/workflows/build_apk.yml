name: Android APK Build & Release

on:
  push:
    tags:
      - 'release-*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Grant execute permission for Gradlew
      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      # Step 5: Build the APK
      - name: Build APK
        run: ./gradlew assembleRelease
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Zulu_jdk/17.0.12-7/x64

      # Step 6: Rename the APK with the tag name
      - name: Rename APK
        run: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/notify-me-${{ github.ref_name }}.apk

      # Step 7: Upload APK to GitHub Actions Artifacts (Optional)
      - name: Upload APK Artifact
        if: success() && steps.build.outputs.apk_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: notify-me-${{ github.ref_name }}.apk
          path: app/build/outputs/apk/release/notify-me-${{ github.ref_name }}.apk
          if-no-files-found: warn

      # Step 8: Create GitHub Release and upload the APK
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        if: success() && steps.build.outputs.apk_exists == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: app/build/outputs/apk/release/notify-me-${{ github.ref_name }}.apk
          asset_name: notify-me-${{ github.ref_name }}.apk
          tag: ${{ github.ref }}